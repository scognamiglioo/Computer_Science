module clock ( output clk );
reg clk;
initial
 begin
 clk = 1'b0; //inicia em um nivel baixo. 0 é baixo e 1 é alto
 end
always
 begin
 #12 clk = ~clk; //a cada 12 tem uma escala
 end
endmodule // clock ( )


module pulse1 ( signal, clock );
input clock;
output signal;
reg signal;

always @ ( posedge clock )
 begin
 signal = 1'b1;
 #4 signal = 1'b0;
 #4 signal = 1'b1;
 #4 signal = 1'b0;
 #4 signal = 1'b1;
 #4 signal = 1'b0;
 end
endmodule // pulse

module pulse1 ( signal, clock );
input clock;
output signal;
reg signal;

always @ ( posedge clock )
 begin
 signal = 1'b1;
 #36 signal = 1'b0;
 #36 signal = 1'b1;
 end
endmodule // pulse


module Exemplo_0904;
wire clock;
clock clk ( clock );
wire p1;
pulse1 pls1 ( p1, clock );
//pulse2 pls2 ( p2, clock );

initial begin
 $dumpfile ( " Exemplo_0904.vcd" );
 $dumpvars ( 1, clock, p1);
 #120 $finish;
end
endmodule // Exemplo_0904